#SingleInstance,Force ;ensure only 1 version running
SetTitleMatchMode, 2 ;to make sure winMinimize and Sending Control C to ConsoleWindowClass works down below
DetectHiddenWindows,On ;Added becauase minimizing the window
SetWinDelay, 200 ; 
; General Documentation := https://ffmpeg.org/ffmpeg-devices.html#gdigrab  Documentation on gdigrab from ffmpeg
; Get list of devices ffmpeg:= ffmpeg -list_devices true -f dshow -i dummy
; Cropping specific area := https://stackoverflow.com/questions/6766333/capture-windows-screen-with-ffmpeg/47591299
;********************Control+Shift+R=Start Recording***********************************
/*
	WinGet, vCount, Count, ahk_class Chrome_WidgetWin_1
	MsgBox, % vCount
*/
#Include Rufaydium-Webdriver-RufaydiumV1.7.1\Rufaydium.ahk

selectAudioCable() {
	
	SysGet, Mon2, Monitor, 2 ; Get the second monitor"s details
	Mon2Width := Mon2Right - Mon2Left ; Calculate the second monitor"s actual width.
	Mon2Height := Mon2Bottom - Mon2Top ; Calculate the second monitor"s actual height.
	W := Mon2Width * 0.5 ;
	
	; WinActivate, `| Microsoft Teams ahk_class Chrome_WidgetWin_1  ; 
	; WinMove, , ,  0 , 0 ;
	; sleep 1000 ; 
	
	 ; WinMove, `| Microsoft Teams ahk_class Chrome_WidgetWin_1 , , Mon2Left, Mon2Top, W*2, Mon2Height ; Move the window to the calculated coordinates.
	
	if WinExist("`| Microsoft Teams ahk_class Chrome_WidgetWin_1") {
		WinActivate ; Use the window found by WinExist.
		Sleep, 500 ; 
		WinMove, , , 0 , 0 ;
		Sleep, 1000 ; 
		WinMaximize ; 
		Sleep, 500 ; 
		
		; WinActivate, ahk_class Chrome_WidgetWin_1
	
		MsgBox, 4, , Has the Teams window activated?, 15  ; 5-second timeout.
		IfMsgBox, No
			Return  ; User pressed the "No" button.
		IfMsgBox, Timeout
			Return ; i.e. Assume "No" if it timed out.
		IfMsgBox, Yes	
			Sleep, 333
		CoordMode, Window
		Click, 1600, 30 Left, Down
		Sleep, 500
		Click, 1600, 30 Left, Up
		Sleep, 600
		Click, 1499, 102 Left, Down
		Sleep, 600
		Click, 1499, 102 Left, Up
		Sleep, 600
		Click, 601, 292 Left, Down
		Sleep, 100
		Click, 601, 292 Left, Up
		Sleep, 600
		Click, 907, 280 Left, Down
		Sleep, 100
		Click, 907, 280 Left, Up
		Sleep, 600
		Click, 875, 406 Left, Down
		Sleep, 100
		Click, 875, 406 Left, Up
		Sleep, 600
		Click, 1433, 56 Left, Down
		Sleep, 100
		Click, 1433, 56 Left, Up
		Sleep, 600
		Return ;
	} else {
		MsgBox not active
	}
}
	
	setCableOutput(){	
		WinActivate,  ahk_class Shell_TrayWnd
		Sleep, 333
		Click, 1788, 19 Right, Down
		Sleep, 100
		Click, 1788, 19 Right, Up
		Sleep, 400
		Click, 1740, 1009 Left, Down
		Sleep, 100
		Click, 1740, 1009 Left, Up
		Sleep, 400
		WinActivate, Sound ahk_class #32770
		Sleep, 3000
		Click, 96, 50 Left, Down
		Sleep, 100
		Click, 96, 50 Left, Up
		Sleep, 400
		Click, 126, 224 Left, Down
		Sleep, 50
		Click, 126, 224 Left, Up
		Sleep, 50
		Click, 126, 224 Left, Down
		Sleep, 50
		Click, 92, 224 Left, Up
		Sleep, 400
		WinActivate, CABLE Output Properties ahk_class #32770
		Sleep, 333
		Click, 82, 55 Left, Down
		Sleep, 100
		Click, 82, 55 Left, Up
		Sleep, 400
		Click, 243, 243 Left, Down
		Sleep, 100
		Click, 243, 243 Left, Up
		
}



;sleep, 200

Gui Add, CheckBox, vShowBanner x24 y62 w120 h23, Show Banner
Gui Add, CheckBox, vRecordScreen x201 y98 w200 h23, Record Screen Audio (Teams)
Gui Add, DropDownList, vDDLItems x201 y62 w300, Microphone Array (Synaptics Audio)||Headset Microphone (Plantronics Blackwire 315.1)|
Gui Add, DropDownList, vDDLMonitors x531 y62 w150, Primary Monitor||Secondary Monitor|
Gui Add, Text, x530 y92 w150 h20 +0x200, VolumeBoost
Gui, Add, Slider, x531 y112 w150 h20 vVolumeBoost ToolTipRight Range1-15 TickInterval1, 3
Gui Add, CheckBox, vEditor x201 y143 w200 h23, Send to Editor
Gui Add, Button, x18 y143 w159 h30, &Record
Gui Font, s13
Gui Add, Text, x25 y17 w400 h23, Make a screen recording
Gui Font
Gui Add, CheckBox, vShowWebcam x25 y98 w120 h23, Show Webcam
Gui Add, Button, x18 y183 w159 h30, &Stop
Gui Add, Button, x201 y183 w159 h30, SetCable&Output

Gui Add, Button, x18 y223 w159 h30, &Test
Gui Add, DropDownList, vDDLCodecOptions x201 y223 w150, Lossless|YouTube||
Gui Add, Button, x18 y263 w159 h30, &Compress
Gui Add, Edit, vPath x201 y263 w400 h21, C:\Users\310267217\CustomPowerBIVisualDevelopment\dT\video\
Gui Add, Button, x18 y303 w159 h30, &Upload
Gui Add, Button, x201 y303 w159 h30, &Upload_Stream
Gui Add, Button, x18 y343 w159 h30, &Exit
Gui Add, Button, x201 y343 w159 h30, Test&2


Gui Show, w720 h420, Window
Return

GuiEscape:
GuiClose:
ExitApp




ButtonSetCableOutput:
setCableOutput() ; 
return

/*
		Symbol	Key	Press	Release	Examples
		^	{Ctrl}	{Ctrl down}	{Ctrl up}	Send "^{Home}" presses Ctrl+Home
		+	{Shift}	{Shift down}	{Shift up}	Send "+abC" sends the text "AbC"
		Send "!+a" presses Alt+Shift+A
		!	{Alt}	{Alt down}	{Alt up}	Send "!a" presses Alt+A
		#	{LWin}
		{RWin}	{LWin down}
		{RWin down}	{LWin up}
		{RWin up}	Send "#e" holds down Win and then presses E
		https://lexikos.github.io/v2/docs/commands/Send.htm
		
*/

; WinGet, vCount, Count,  `| Microsoft Teams ahk_class Chrome_WidgetWin_1
; MsgBox, % vCount

ButtonExit:
Chrome := new Rufaydium("chromedriver.exe")
Chrome.QuitAllSessions() ; close all Page 
Chrome.Driver.Exit() ; then exits driver
Sleep 1000
ExitApp
Return

ButtonTest2:
; clipboard := "https://youtube.com/embed/" + spl[spl.Length()]
Chrome := new Rufaydium("chromedriver.exe")
ses := Chrome.getPages()
 msgbox % ses.Length() 
if (ses.Length() > 0) {		
	Page := Chrome.getPage(1) 
} else {
	Chrome.capabilities.setUserProfile("Default")
	Page := Chrome.NewPage()
}

Page.NewTab()	
Page.Navigate("https://www.protopage.com/stevedep#General/Way_of_working_--%3E")
Page.ActiveTab()	
; MsgBox, 4096,, Continue after selecting the right tab, then paste the clipboard into the webpage config
js = 
(
var xpath = "//div[text()='Add widgets']";
var matchingElement = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
matchingElement.parentElement.click()
)
Page.CDP.evaluate(js)

js = 
(
	function triggerMouseEvent (node, eventType) {
		var clickEvent = document.createEvent ('MouseEvents');
		clickEvent.initEvent (eventType, true, true);
		node.dispatchEvent (clickEvent);
		}

		var xpath = "//div[text()='Web page']";
		var matchingElement = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
		var node = matchingElement.closest("div > div")
		triggerMouseEvent(node, "mousedown")
)
Page.CDP.evaluate(js)
/*


while !Page.querySelector("div[id^=new]") ; [0].click()
	sleep, 500
*/
js=
(
	function triggerMouseEvent (node, eventType) {
		var clickEvent = document.createEvent ('MouseEvents');
		clickEvent.initEvent (eventType, true, true);
		node.dispatchEvent (clickEvent);
	}

node = document.querySelector("div[id^=new]")

triggerMouseEvent(node.childNodes[0], "mousedown")
triggerMouseEvent(node.childNodes[0], "mouseup")
)
Page.CDP.evaluate(js)

js=
(
	function triggerMouseEvent (node, eventType) {
		var clickEvent = document.createEvent ('MouseEvents');
		clickEvent.initEvent (eventType, true, true);
		node.dispatchEvent (clickEvent);
	}

node = document.querySelector("div[id^=new]").querySelector("a")

triggerMouseEvent(node, "mousedown")

)
Page.CDP.evaluate(js)

url := "https://youtube.com/embed/" + spl[spl.Length()]

js=
(
r = document.querySelectorAll("div[id^=new]")
r[1].querySelector(" div > table > tbody > tr:nth-child(1) > td:nth-child(2) > div > input").value = '%url%'

)
Page.CDP.evaluate(js)

js=
(
	
function triggerMouseEvent (node, eventType) {
		var clickEvent = document.createEvent ('MouseEvents');
		clickEvent.initEvent (eventType, true, true);
		node.dispatchEvent (clickEvent);
	}

node = document.querySelectorAll("div[id^=new]")[1].querySelector("div:nth-child(3) > span")

node.click()

)
Page.CDP.evaluate(js)


gui, show
return ; 


; if (ses.Length() > )
; chrome.capabilities.setUserProfile("Default")
; Page := Chrome.NewPage()

; navigate to url



return 

ButtonUpload_Stream:
Gui, Submit ; 
Chrome := new Rufaydium("chromedriver.exe")
ses := Chrome.getSessions()
; msgbox % ses.Length() 

FileSelectFile, vFile ; 

if (ses.Length() > 0) {		
	Page := Chrome.getSession(1) 
} else {
	Chrome.capabilities.setUserProfile("Default")
	Page := Chrome.NewSession()

}

Page.NewTab()	
; navigate to url
Page.Navigate("https://web.microsoftstream.com/upload")
Page.ActiveTab()	

while !Page.QuerySelector("button.c-hyperlink") ; [0].click()
	sleep, 500

/*
i := Page.QuerySelector("button.c-hyperlink")
sleep, 500
msgbox i
i.click()
*/
js = 
(
	document.querySelector("button.c-hyperlink").click()
)
Page.CDP.evaluate(js)
sleep 600
send, %vFile%
sleep 600
send, !o

while !Page.QuerySelector("v-pane-header.permissions-tab-header") ; [0].click()
	sleep, 500
js = 
(
	document.querySelector("v-pane-header.permissions-tab-header").click()
)
Page.CDP.evaluate(js)
sleep 600

js = 
(
	document.querySelector("div > video-edit-permissions-pane > div > div > label > input").click()
)
Page.CDP.evaluate(js)
sleep 600

js = 
(
	document.querySelector("button.stream-btn.btn-primary.dialog-confirm-button.ng-binding.ng-scope").click()
)
Page.CDP.evaluate(js)
sleep 600

js = 
(
	document.querySelector("button.stream-btn.stream-btn.accordion-action-button.share-button").click()
)
Page.CDP.evaluate(js)
sleep 600

js = 
(
	document.querySelector("button.stream-btn.btn-primary.ng-binding.ng-isolate-scope").click()
)
Page.CDP.evaluate(js)
sleep 600

js = 
(
	document.querySelector("button.stream-btn.stream-btn.close-button.only-close-button.ng-binding").click()
)
Page.CDP.evaluate(js)
sleep 600

js = 
(
	document.querySelector("button.stream-btn.stream-btn.close-button.only-close-button.ng-binding").click()
)
Page.CDP.evaluate(js)
sleep 600

js = 
(
	document.querySelector("input.search-field.action-list-item.principal-group-search-field.ng-pristine.ng-untouched.ng-valid.ng-empty.ng-valid-maxlength").value = "ChurnAnalytics"
	document.querySelector("button[name=principal-group-search-button]").click()
)
Page.CDP.evaluate(js)
sleep 600


msgbox halle
return


ButtonUpload:
Gui, Submit ; 
Chrome := new Rufaydium("chromedriver.exe")
ses := Chrome.getSessions()
; msgbox % ses.Length() 

FileSelectFile, vFile ; 
InputBox, VideoDesc, Video description, Please provide a description, , 640, 100
if ErrorLevel {
    MsgBox, CANCEL was pressed.
	return ; 
}
else {
    MsgBox, You entered "%VideoDesc%"
}



if (ses.Length() > 0) {		
	Page := Chrome.getSession(1) 
} else {
	Chrome.capabilities.setUserProfile("Default")
	Page := Chrome.NewSession()

}

Page.NewTab()	
; navigate to url
Page.Navigate("https://www.youtube.com/upload")
Page.ActiveTab()	

; document.querySelector("#select-files-button.style-scope").click()
e := Page.QuerySelector("#select-files-button.style-scope")
e.click(0)
sleep, 1000
send, %vFile%
sleep, 500 
send, !o
sleep, 500 

; document.getElementsByName("VIDEO_MADE_FOR_KIDS_NOT_MFK")[0].click()
while !Page.getElementsByName("VIDEO_MADE_FOR_KIDS_NOT_MFK") ; [0].click()
	sleep, 500
Page.getElementsByName("VIDEO_MADE_FOR_KIDS_NOT_MFK")[0].click()
; msgbox % t.Count()
sleep, 500
; document.getElementById("next-button").click()
Page.getElementById("next-button").click()
sleep, 800
Page.getElementById("next-button").click()
sleep, 800
Page.getElementById("next-button").click()
sleep, 1000
Page.getElementsByName("PRIVATE")[0].click()
sleep, 800
Page.querySelector("ytcp-icon-button.video-url-fadeable.style-scope.ytcp-video-info").click()
sleep, 800
Page.getElementById("done-button").click()
sleep, 800
while !Page.querySelector("#close-button.style-scope.ytcp-uploads-still-processing-dialog") 
	sleep, 500
Page.querySelector("#close-button.style-scope.ytcp-uploads-still-processing-dialog").click()

Page.NewTab()	
Page.Navigate("https://www.protopage.com/stevedep#General/Way_of_working_--%3E")
Page.ActiveTab()	
; MsgBox, 4096,, Continue after selecting the right tab, then paste the clipboard into the webpage config
js = 
(
var xpath = "//div[text()='Add widgets']";
var matchingElement = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
matchingElement.parentElement.click()
)
Page.CDP.evaluate(js)

js = 
(
	function triggerMouseEvent (node, eventType) {
		var clickEvent = document.createEvent ('MouseEvents');
		clickEvent.initEvent (eventType, true, true);
		node.dispatchEvent (clickEvent);
		}

		var xpath = "//div[text()='Web page']";
		var matchingElement = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;
		var node = matchingElement.closest("div > div")
		triggerMouseEvent(node, "mousedown")
)
Page.CDP.evaluate(js)
/*


while !Page.querySelector("div[id^=new]") ; [0].click()
	sleep, 500
*/
js=
(
	function triggerMouseEvent (node, eventType) {
		var clickEvent = document.createEvent ('MouseEvents');
		clickEvent.initEvent (eventType, true, true);
		node.dispatchEvent (clickEvent);
	}

node = document.querySelector("div[id^=new]")

triggerMouseEvent(node.childNodes[0], "mousedown")
triggerMouseEvent(node.childNodes[0], "mouseup")
)
Page.CDP.evaluate(js)

js=
(
	function triggerMouseEvent (node, eventType) {
		var clickEvent = document.createEvent ('MouseEvents');
		clickEvent.initEvent (eventType, true, true);
		node.dispatchEvent (clickEvent);
	}

node = document.querySelector("div[id^=new]").querySelector("a")

triggerMouseEvent(node, "mousedown")

)
Page.CDP.evaluate(js)
spl := strSplit(clipboard, "/")

url := "https://youtube.com/embed/" + spl[spl.Length()]

js=
(
r = document.querySelectorAll("div[id^=new]")
r[1].querySelector(" div > table > tbody > tr:nth-child(1) > td:nth-child(2) > div > input").value = '%url%'

)
Page.CDP.evaluate(js)
js=
(
document.querySelectorAll("div[id^=new]")[1].querySelector("input[value=Untitled]").value = '%VideoDesc%'
)
Page.CDP.evaluate(js)

js=
(
	
function triggerMouseEvent (node, eventType) {
		var clickEvent = document.createEvent ('MouseEvents');
		clickEvent.initEvent (eventType, true, true);
		node.dispatchEvent (clickEvent);
	}

node = document.querySelectorAll("div[id^=new]")[1].querySelector("div:nth-child(3) > span")

node.click()

)
Page.CDP.evaluate(js)

Gui, show
; document.getElementById("next-button").click()
; document.getElementById("next-button").click()
; document.getElementsByName("UNLISTED")[0].click()
; document.querySelector("ytcp-icon-button.video-url-fadeable.style-scope.ytcp-video-info").click()
; document.querySelector("#close-button.style-scope.ytcp-video-share-dialog").click()

return
/*


run "C:\Program Files\Google\Chrome Beta\Application\chrome.exe" --new-window "https://www.youtube.com"
WinWait  YouTube - Google Chrome ahk_class Chrome_WidgetWin_1 ; ; 

if (WinExist("YouTube - Google Chrome ahk_class Chrome_WidgetWin_1")) {
	WinActivate ; 
	WinRestore ; 
	sleep, 500 ;
	WinMove, , , 0, 0 ; Move the window to the calculated coordinates.	
	sleep, 500 ; 	
	WinMaximize , YouTube - Google Chrome ahk_class Chrome_WidgetWin_1
	
	sleep, 2000 ; 
	CoordMode Pixel  ; Interprets the coordinates below as relative to the screen rather than the active window.
	ImageSearch, FoundX, FoundY, 0, 0, A_ScreenWidth, A_ScreenHeight, *Icon3 %A_ProgramFiles%\SomeApp\SomeApp.exe
	if (ErrorLevel = 2)
		MsgBox Could not conduct the search.
	else if (ErrorLevel = 1)
		MsgBox Icon could not be found on the screen.
	else
		MsgBox The icon was found at %FoundX%x%FoundY%.
	
		sleep, 2500 ; 
		CoordMode, Window
		Click, 1726, 120, left 
		sleep 600 
		Click, 1600, 180, left 
		sleep 600 
		WinWait  Kanaalcontent - YouTube Studio - Google Chrome ahk_class Chrome_WidgetWin_1 ;
		sleep 600
		Click, 950, 700, left 
	
	
	
}
return ; 
*/

ButtonCompress:
Gui, Submit ; 
FileSelectFile, vFile ; 
InputBox, New_File_Name,File name,What would you like to name your video file?,,300,130 ;Get a file name for your new video
Run %ComSpec% /k C:\Temp\bin\ffmpeg -i %vFile% -vcodec libx265 -crf 28 %Path%%New_File_Name%.mp4

sleep 1000 ;
WinMaximize, ahk_class ConsoleWindowClass ;minimize the CMD window


return ; 

	ButtonTest:
	Chrome := new Rufaydium("chromedriver.exe")
	 Clipboard := json.dump(Chrome.getPages()) 
	ses := Chrome.Pages() 
	
	; Clipboard := json.dump(Chrome.getPage(1)) 
	Page := Chrome.getPage(1) 
	Page.NewTab()
	gui, show
	return ; 
	
	ButtonStop:
	Gui, Submit ; 
	WinMaximize, C:\WINDOWS\system32\cmd.exe - C:\Temp\bin\ffmpeg ;
	Sleep 500 ; 
	WinActivate, C:\WINDOWS\system32\cmd.exe - C:\Temp\bin\ffmpeg ;
	Sleep, 300 ; 
	Send q ; 
	sleep, 500
	InputBox, New_File_Name,File name,What would you like to name your video file?,,300,130 ;Get a file name for your new video
	if (New_File_Name = "") or (Error = 1) ;If you don"t give it a name, it won"t rename it and won"t run it
		return 
	
	FileMove, c:\Temp\temp.mkv, c:\Temp\%New_File_Name%.mkv  ; Rename the temp file to your new file.
	Gui, Show
	if WinExist("Temp ahk_class CabinetWClass") {
		
		WinActivate , Temp ahk_class CabinetWClass ; 
	} else {
		
		Run % "explorer /expand, C:\Temp\" ; 
	}
	
	if (Editor = 1) {
		if WinExist("Wondershare Filmora Scrn ahk_class Qt5QWindowIcon ahk_exe FSEditor.exe") {
			
			WinActivate , Wondershare Filmora Scrn ahk_class Qt5QWindowIcon ahk_exe FSEditor.exe ; 
			sleep 1000
		} else {
			
			Run, C:\Program Files (x86)\Wondershare\Wondershare Filmora Scrn\FSEditor.exe
			WinWaitActive Wondershare Filmora Scrn ahk_class Qt5QWindowIcon ahk_exe FSEditor.exe
			sleep 5000
		}
		CoordMode, Window
		Click, 128, 12, left 
		sleep 600 
		Click, 128, 216, left
		sleep 600
		send, c:\Temp\%New_File_Name%.mkv
		sleep 1200
		send, !o
		sleep  2000
		Click, 205, 250 Left, , Down
		Sleep, 300
		Click, 58, 965 Left, , Up ; assuming full screen
		Sleep, 900
		Send, +z
		
	}
	
	MsgBox done
	
	Return
	
	ButtonRecord:
	Gui, Submit,
;MsgBox %ShowBanner%
	
	SysGet, Mon2, Monitor, 2 ; Get the second monitor"s details
	SysGet, Mon1, Monitor, 1 ; Get the second monitor"s details
	Mon2Width := Mon2Right - Mon2Left ; Calculate the second monitor"s actual width.
	Mon2Height := Mon2Bottom - Mon2Top ; Calculate the second monitor"s actual height.
	W := Mon2Width * 0.5 ;
	
	generalsettings 	= -y -rtbufsize 900M 
	webcamenaudio		= -f dshow -i video="Integrated Camera":audio="%DDLItems%" ; input 0 - webcam & audio
	audio			= -f dshow -i audio="%DDLItems%" ; input 0 - webcam & audio
	if (DDLMonitors = "Primary Monitor") {
		desktop 			= -f gdigrab -video_size %Mon1Right%x%Mon1Bottom% -i desktop ; input 1 - screen
	} else {
		desktop 			= -f gdigrab -offset_x %Mon2Left% -offset_y %Mon2Top% -video_size %Mon2Width%x%Mon2Height% -i desktop ; input 1 - screen
	}
	banner 			= -i "C:\Temp\Banner_Visual_Development.png" ; input 2 - 
	systemaudio 		= -f dshow -i audio="CABLE Output (VB-Audio Virtual Cable)" ; input 3
	if (DDLCodecOptions = "YouTube") {
		codec 		= -c:v libx265 -crf 20 ;
	} else {
		codec 		= -c:v libx264 -r 20 -preset ultrafast -tune zerolatency -crf 0 -pix_fmt yuv420p ;
	}
	filtercomplex 		= -filter_complex 
	volume 			= [0:a]volume=volume=%VolumeBoost%[amped] 	; amp volume 
	scalewebcam 		:= "[0:v]scale=300:trunc(ow/a/2)*2[s]" ; scale webcam [0:v]->[s]
	overlaywebcam 		:= "[1:v][s]overlay=(main_w-overlay_w):main_h-overlay_h[webcam]" ;overlay webcam [1:v][s]->[v]
	overlaybanner 		:= "[2]overlay=(main_w-overlay_w):0[banner]" ; overlay banner [v] -> [banner]
	if (RecordScreen = 1) {
		audioMap				:= "[mix]"
		MsgBox, 4, , Select Audio Cable?, 15  ; 5-second timeout.
		
		IfMsgBox, Timeout
			Return ; i.e. Assume "No" if it timed out.
		IfMsgBox, Yes	
			selectAudioCable() ;		
			Sleep, 2000 ; 
		

	} else {
		audioMap				:= "[amped]"
	}
	
	if (ShowBanner= 1 and ShowWebcam=1) {
		composefilter = %volume%;%scalewebcam%;%overlaywebcam%;[webcam]%overlaybanner% ; input for overlay banner is webcam
		if (RecordScreen = 1) {
			composefilter = "%composefilter%;[amped][3]amix[mix]"
		} else {
			composefilter = "%composefilter%"
		}
		
		out = -map "[banner]" -map "%audioMap%" "C:\Temp\temp.mkv" ; select video output		
		if (RecordScreen = 1) {
			all = %generalsettings% %webcamenaudio% %desktop% %banner% %systemaudio% %codec% %filtercomplex% %composefilter% %out%
		} else {
			all = %generalsettings% %webcamenaudio% %desktop% %banner% %codec% %filtercomplex% %composefilter% %out%
		}
		
		
	} 
	else if (ShowBanner= 1 and ShowWebcam=0) ; todo testen
	{	
		composefilter = %volume%;[1]%overlaybanner% ; input for overlay banner is 1 (screen)
		if (RecordScreen = 1) {
			composefilter = "%composefilter%;[amped][3]amix[mix]"
		} else {
			composefilter = "%composefilter%"
		}
		
		out = -map "[banner]" -map "%audioMap%" "C:\Temp\temp.mkv" ; select video output	
		if (RecordScreen = 1) {
			all = %generalsettings% %audio% %desktop% %banner% %systemaudio% %codec% %filtercomplex% %composefilter% %out%
		} else {
			all = %generalsettings% %audio% %desktop% %banner% %codec% %filtercomplex% %composefilter% %out%
		}	
		
	}
	else if (ShowBanner= 0 and ShowWebcam=1)
	{	
		composefilter = %volume%;%scalewebcam%;%overlaywebcam% ; input for overlay banner is webcam
		if (RecordScreen = 1) {
			composefilter = "%composefilter%;[amped][3]amix[mix]"
		} else {
			composefilter = "%composefilter%"
		}
		
		out = -map "[webcam]" -map "%audioMap%" "C:\Temp\temp.mkv" ; select video output		
		if (RecordScreen = 1) {
			all = %generalsettings% %webcamenaudio% %desktop% %banner% %systemaudio% %codec% %filtercomplex% %composefilter% %out%
		} else {
			all = %generalsettings% %webcamenaudio% %desktop% %banner% %codec% %filtercomplex% %composefilter% %out%
		}		
		
	}
	else { ; todo
	
		composefilter = %volume%
		if (RecordScreen = 1) {
			composefilter = "%composefilter%;[amped][3]amix[mix]"
		} else {
			composefilter = "%composefilter%"
		}
		
		out = -map "1" -map "%audioMap%" "C:\Temp\temp.mkv" ; select video output
		
		if (RecordScreen = 1) {
			all = %generalsettings% %audio% %desktop% %banner% %systemaudio% %codec% %filtercomplex% %composefilter% %out%
		} else {
			all = %generalsettings% %audio% %desktop% %banner% %codec% %filtercomplex% %composefilter% %out%
		}
		
	}
	
;	MsgBox %All% 
	Run %ComSpec% /k C:\Temp\bin\ffmpeg %all% ;
	Clipboard = %ComSpec% /k C:\Temp\bin\ffmpeg %all% ;
	
	sleep 1000 ;
	WinMaximize, ahk_class ConsoleWindowClass ;minimize the CMD window
	Sleep 2000 ; 
	winMinimize, ahk_class ConsoleWindowClass ;minimize the CMD window
	
	Gui Show
	
	
	return
	
	
	^.::
	CoordMode, Mouse
	Send, ^b
	Sleep 1200
	Send, {Up}
	Sleep 1200
	Send, {Up}
	sleep, 1200
	Click, -50, 0, Left, Relative  
	sleep, 1200
	Send, ^b
	sleep, 1200
	Send, {Delete}
	sleep, 1200
	Click, 50, 0, Left, , Down, Relative
	sleep, 1200
	Click, -200, 0, Left, , Up, Relative
	
	return
